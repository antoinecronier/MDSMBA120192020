plugins {
	id 'org.springframework.boot' version '2.2.4.RELEASE'
	id 'io.spring.dependency-management' version '1.0.9.RELEASE'
	id 'java'
    id 'eclipse'
    id 'jacoco'
    id 'checkstyle'
}

group = 'com.tactfactory.monprojet'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '1.8'

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	runtimeOnly 'mysql:mysql-connector-java'
	testImplementation('org.springframework.boot:spring-boot-starter-test')
    /* {
		exclude group: 'org.junit.vintage', module: 'junit-vintage-engine'
	}*/
    //testCompile group: 'org.junit', name: 'junit5-engine', version: '5.0.0-ALPHA'
    //testCompile group: 'org.junit.jupiter', name: 'junit-jupiter-engine', version: '5.0.0'
}

test {
	useJUnitPlatform()
    ignoreFailures = true
}
    
def classesJava = "${project.buildDir}/classes/java/main/"
def javasRoot = "${rootProject.rootDir}/src/main/java"
def testClassesJava = "${project.buildDir}/classes/java/test"
def testJavaRoot = "${rootProject.rootDir}/src/test/java"

def javaRootFB = "${javasRoot}/com/tactfactory/algotojava"
def classesJavaFB = "${classesJava}/com/tactfactory/algotojava"

checkstyle {
    toolVersion = "6.3"
}

task checkstyleMain (type: Checkstyle, overwrite: true) {
    ignoreFailures = true
    showViolations = false
    source fileTree('src/main/java')
    include '**/*.java'
    exclude '**/gen/**'
    exclude '**/R.java'
    exclude '**/BuildConfig.java'
    reports {
        //xml.destination "$project.buildDir/reports/checkstyle/main.xml"
    }
    classpath = fileTree(classesJava)
    configFile = file("${rootProject.rootDir}/checkstyle.xml")
}

task checkstyleTest (type: Checkstyle, overwrite: true){
    ignoreFailures = true
    showViolations = false
    source fileTree('src/test/java')
    include '**/*.java'
    exclude '**/gen/**'
    exclude '**/R.java'
    exclude '**/BuildConfig.java'
    reports {
        //xml.destination "$project.buildDir/reports/checkstyle/test.xml"
    }
    classpath = fileTree("$project.buildDir/classes/test/")
    configFile = file("${rootProject.rootDir}/checkstyle.xml")
}